from collections import defaultdict

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from loader import MENU

# –í–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
SETTINGS: dict[str, str] = {
    "price_time": "–°—Ç–∞–≤–∫–∞ –≤ —á–∞—Å",
    "price_overtime": "–î–æ–ø–ª–∞—Ç–∞ –∑–∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫—É",
    "price_cold": "–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ —Ö–æ–ª–æ–¥",
    "price_award": "–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏"
}

settings_choices: dict[int, dict] = defaultdict(dict)


async def get_actions(user_id: int) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫.

    :param user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º.
    :return InlineKeyboardMarkup: –ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    """
    keyboard: list[list[InlineKeyboardButton]] = [[]]
    for action in SETTINGS:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
        button_text = f"{SETTINGS[action]}    [‚úò] " \
            if action not in settings_choices[user_id] \
            else f"{SETTINGS[action]}    [‚úîÔ∏è]"
        keyboard.append(
            [
                InlineKeyboardButton(
                    text=button_text, callback_data=f"toggle-{action}")
            ]
        )

    keyboard.append([
        InlineKeyboardButton(text="üÜó", callback_data="finish"),
        InlineKeyboardButton(text=MENU, callback_data="main"),
        InlineKeyboardButton(text="‚ùå", callback_data="remove_settings")
    ])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
