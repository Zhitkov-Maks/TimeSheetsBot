"""A module for generating a message with statistics."""
from aiogram.utils.markdown import hbold


async def generate_text(one, two, total) -> str:
    """–ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    return f"""
–ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏ ‚úäüòéüí™
{70 * "-"}
–ó–∞ –ø–µ—Ä–≤—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {hbold(one[0])}‚ÇΩ 
–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ - {hbold(one[1])} —á 
–í —Ç.—á –¥–æ–ø —á–∞—Å–æ–≤ - {hbold(one[2])} —á
{70 * "-"}
–ó–∞ –≤—Ç–æ—Ä–æ–π –ø–µ—Ä–∏–æ–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {hbold(two[0])}‚ÇΩ
–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ - {hbold(two[1])} —á
–í —Ç.—á –¥–æ–ø —á–∞—Å–æ–≤ - {hbold(two[2])} —á
{70 * "-"}
–ó–∞ –≤–µ—Å—å –º–µ—Å—è—Ü –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {hbold(total[0])}‚ÇΩ
–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ - {hbold(total[1])} —á
–í —Ç.—á –¥–æ–ø - {hbold(total[2])} —á
{70 * "-"}
"""


async def generate_statistics(info: list):
    """
    –û–±—ä–µ–¥–∏–Ω—è–µ—Ç —á–∞—Å—ã –≤ –æ–±—â–∏–µ. –ò –µ—Å–ª–∏ —É –Ω–∞—Å –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É
    –º–µ—Å—è—Ü—É –Ω–∏—á–µ–≥–æ –Ω–µ—Ç —Ç–æ –∑–∞–º–µ–Ω—è–µ—Ç None –Ω—É–ª—è–º–∏.
    """
    if info[0] is None:
        info[0], info[1], info[2] = 0, 0, 0
    else:
        info[1] = info[1] + info[2]
    return info


async def total_info(one: tuple, two: tuple, total: tuple) -> str:
    """–ó–∞–ø—É—Å–∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π."""
    info_one: list = await generate_statistics(list(one))
    info_two: list = await generate_statistics(list(two))
    info_total: list = await generate_statistics(list(total))
    return await generate_text(info_one, info_two, info_total)
